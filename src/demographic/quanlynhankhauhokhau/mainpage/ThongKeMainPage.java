/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package demographic.quanlynhankhauhokhau.mainpage;

//import com.sun.jdi.connect.spi.Connection;
import demographic.quanlynhankhauhokhau.suaxoaform.SuaXoaTamTruForm;
import demographic.quanlynhankhauhokhau.suaxoaform.SuaXoaTamVangForm;
import demographic.quanlynhankhauhokhau.themform.ThemTamVangForm;
import demographic.models.User;
import demographic.login.MainFormForAdmin;
import demographic.login.MainFormForUser;
import demographic.models.HoKhau;
import demographic.models.TamTru;
import demographic.models.TamVang;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.*;
import javax.swing.JFileChooser;
import net.proteanit.sql.DbUtils;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Nam
 */
public class ThongKeMainPage extends javax.swing.JFrame {

    /**
     * Creates new form NhanKhauMainPage
     */
    public ThongKeMainPage() {
        initComponents();
        display();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nhanKhauPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbNhanKhau = new javax.swing.JLabel();
        lbHoKhau = new javax.swing.JLabel();
        lbTamVang = new javax.swing.JLabel();
        lbTamTru = new javax.swing.JLabel();
        lbKhaiTu = new javax.swing.JLabel();
        lbThoat = new javax.swing.JLabel();
        lbThongKe = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tThongKe = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nhanKhauPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        lbNhanKhau.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbNhanKhau.setForeground(new java.awt.Color(255, 255, 255));
        lbNhanKhau.setText("Nhân khẩu");
        lbNhanKhau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbNhanKhauMouseClicked(evt);
            }
        });

        lbHoKhau.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbHoKhau.setForeground(new java.awt.Color(255, 255, 255));
        lbHoKhau.setText("Hộ khẩu");
        lbHoKhau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbHoKhauMouseClicked(evt);
            }
        });

        lbTamVang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbTamVang.setForeground(new java.awt.Color(255, 255, 255));
        lbTamVang.setText("Tạm vắng");
        lbTamVang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbTamVangMouseClicked(evt);
            }
        });

        lbTamTru.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbTamTru.setForeground(new java.awt.Color(255, 255, 255));
        lbTamTru.setText("Tạm trú");
        lbTamTru.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbTamTruMouseClicked(evt);
            }
        });

        lbKhaiTu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbKhaiTu.setForeground(new java.awt.Color(255, 255, 255));
        lbKhaiTu.setText("Khai tử");
        lbKhaiTu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbKhaiTuMouseClicked(evt);
            }
        });

        lbThoat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbThoat.setForeground(new java.awt.Color(255, 255, 255));
        lbThoat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbThoat.setText("Thoát    ");
        lbThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbThoatMouseClicked(evt);
            }
        });

        lbThongKe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbThongKe.setForeground(new java.awt.Color(255, 255, 255));
        lbThongKe.setText("Thống kê");
        lbThongKe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbThongKeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbThoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbKhaiTu)
                    .addComponent(lbTamVang)
                    .addComponent(lbHoKhau)
                    .addComponent(lbNhanKhau)
                    .addComponent(lbThongKe)
                    .addComponent(lbTamTru))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(lbHoKhau)
                .addGap(18, 18, 18)
                .addComponent(lbNhanKhau)
                .addGap(18, 18, 18)
                .addComponent(lbTamVang)
                .addGap(18, 18, 18)
                .addComponent(lbTamTru)
                .addGap(18, 18, 18)
                .addComponent(lbKhaiTu)
                .addGap(18, 18, 18)
                .addComponent(lbThongKe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 305, Short.MAX_VALUE)
                .addComponent(lbThoat)
                .addGap(33, 33, 33))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("THỐNG KÊ");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        tThongKe.setForeground(new java.awt.Color(0, 102, 102));
        tThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Thuộc tính", "Số liệu", "Đơn vị"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tThongKe.setGridColor(new java.awt.Color(188, 206, 206));
        tThongKe.setRowHeight(26);
        tThongKe.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tThongKe.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tThongKe.setShowGrid(true);
        tThongKe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tThongKeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tThongKe);

        javax.swing.GroupLayout nhanKhauPanelLayout = new javax.swing.GroupLayout(nhanKhauPanel);
        nhanKhauPanel.setLayout(nhanKhauPanelLayout);
        nhanKhauPanelLayout.setHorizontalGroup(
            nhanKhauPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nhanKhauPanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nhanKhauPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 985, Short.MAX_VALUE))
                .addContainerGap())
        );
        nhanKhauPanelLayout.setVerticalGroup(
            nhanKhauPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(nhanKhauPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nhanKhauPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nhanKhauPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tThongKeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tThongKeMouseClicked
        // ------ lấy tham số từ cái click vào bảng -----
        // ------ sau đó tạo một đối tượng nhan khau với tham số đó
        DefaultTableModel model = (DefaultTableModel)tThongKe.getModel();
        int indexRow = tThongKe.getSelectedRow();
        key = String.valueOf(model.getValueAt(indexRow, 0).toString());
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/quan_ly_khu_dan_cu","root","");
            String query = "SELECT * FROM tam_tru where tam_tru_id = " + key + "";
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery(query);
            TamTru tamTruMoi = new TamTru();
            
            while (resultSet.next()) {
                tamTruMoi.setTamTruId(resultSet.getInt("tam_tru_id"));
                tamTruMoi.setHoTen(resultSet.getString("ho_ten"));
                tamTruMoi.setNgaySinh(resultSet.getString("ngay_sinh"));
                tamTruMoi.setSoCMND(resultSet.getString("so_CMND"));
                tamTruMoi.setNgayCap(resultSet.getString("ngay_cap"));
                tamTruMoi.setNoiCap(resultSet.getString("noi_cap"));
                tamTruMoi.setGioiTinh(resultSet.getString("gioi_tinh"));
                tamTruMoi.setDiaChiThuongTru(resultSet.getString("dia_chi_thuong_tru"));
                tamTruMoi.setChoOHienTai(resultSet.getString("cho_o_hien_tai"));
                tamTruMoi.setLyDo(resultSet.getString("ly_do"));
                tamTruMoi.setNgayTamTru(resultSet.getString("ngay_tam_tru"));
                tamTruMoi.setDeleted(resultSet.getInt("deleted"));

            }
            this.tamTru = tamTruMoi;
//            System.out.println(hoKhau.toString());
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_tThongKeMouseClicked

    // -------------------- BACK TO MAIN FORM ----------------------------
    private void lbThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbThoatMouseClicked
        // TODO add your handling code here:
        if(user.isAdmin == 1){
            MainFormForAdmin mainForm = new MainFormForAdmin();
            mainForm.setVisible(true);
            mainForm.user = user;
            this.dispose();
        }
        else if (user.isAdmin == 0) {
            MainFormForUser mainForm = new MainFormForUser();
            mainForm.setVisible(true);
            mainForm.user = user;
            this.dispose();
        }
        else {
            MainFormForUser mainForm = new MainFormForUser();
            mainForm.setVisible(true);
            this.dispose();
        }
        this.dispose();
    }//GEN-LAST:event_lbThoatMouseClicked

    private void lbKhaiTuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbKhaiTuMouseClicked
        // TODO add your handling code here:
        KhaiTuMainPage newFrame = new KhaiTuMainPage();
        newFrame.setVisible(true);
        newFrame.user = user;
        this.dispose();
    }//GEN-LAST:event_lbKhaiTuMouseClicked

    private void lbTamTruMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTamTruMouseClicked
        // TODO add your handling code here:
        TamTruMainPage newFrame = new TamTruMainPage();
        newFrame.setVisible(true);
        newFrame.user = user;
        this.dispose();
    }//GEN-LAST:event_lbTamTruMouseClicked

    private void lbTamVangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTamVangMouseClicked
        // TODO add your handling code here:
        TamVangMainPage newFrame = new TamVangMainPage();
        newFrame.setVisible(true);
        newFrame.user = user;
        this.dispose();
    }//GEN-LAST:event_lbTamVangMouseClicked

    private void lbHoKhauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbHoKhauMouseClicked
        // TODO add your handling code here:
        HoKhauMainPage newFrame = new HoKhauMainPage();
        newFrame.setVisible(true);
        newFrame.user = user;
        this.dispose();
    }//GEN-LAST:event_lbHoKhauMouseClicked

    private void lbNhanKhauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbNhanKhauMouseClicked
        // TODO add your handling code here:
        NhanKhauMainPage newFrame = new NhanKhauMainPage();
        newFrame.setVisible(true);
        newFrame.user = user;
        this.dispose();
    }//GEN-LAST:event_lbNhanKhauMouseClicked

    private void lbThongKeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbThongKeMouseClicked
        // TODO add your handling code here:
        ThongKeMainPage newFrame = new ThongKeMainPage();
        newFrame.setVisible(true);
        newFrame.user = user;
        this.dispose();
    }//GEN-LAST:event_lbThongKeMouseClicked

    // ------------ START TO CODE HERE -----------------
    // ------------- User parameter --------------------
    public User user;
    // ------------- CONNECTION SQL PARAMETER---------------
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    Statement st = null;
    
    TamTru tamTru;
    
    // ------------- DISPLAY PEOPLE ---------------------
    private void display(){
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/quan_ly_khu_dan_cu","root","");
            st = conn.createStatement();
            
            String sql = "SELECT COUNT(*) AS soLuongNhanKhau\n" +
                    "FROM nhan_khau WHERE deleted = 0;";
            rs = st.executeQuery(sql);
            int soLuongNhanKhau = -1;
            if (rs.next()){
                soLuongNhanKhau = rs.getInt("soLuongNhanKhau");
            }
            System.out.println(soLuongNhanKhau);

            sql = "SELECT COUNT(*) AS soLuongNam\n" +
                    "FROM nhan_khau\n" +
                    "WHERE gioi_tinh = 'Nam' AND deleted = 0;";
            rs = st.executeQuery(sql);
            int soLuongNam = -1;
            if(rs.next()) {
                soLuongNam = rs.getInt("soLuongNam");
            }
            float tyLeNam = 100 * soLuongNam / soLuongNhanKhau;
            
            sql = "SELECT COUNT(*) AS soLuongNu\n" +
                    "FROM nhan_khau\n" +
                    "WHERE gioi_tinh = 'Nữ' AND deleted = 0;";
            rs = st.executeQuery(sql);
            int soLuongNu = -1;
            if(rs.next()){
                soLuongNu = rs.getInt("soLuongNu");
            }
            float tyLeNu = 100 * soLuongNu / soLuongNhanKhau;
            
            sql = "SELECT\n" +
                "    SUM(CASE WHEN YEAR(CURDATE()) - YEAR(ngay_sinh) BETWEEN 0 AND 4 THEN 1 ELSE 0 END) AS Duoi5Tuoi,\n" +
                "    SUM(CASE WHEN YEAR(CURDATE()) - YEAR(ngay_sinh) BETWEEN 5 AND 9 THEN 1 ELSE 0 END) AS Tu5Den10Tuoi,\n" +
                "    SUM(CASE WHEN YEAR(CURDATE()) - YEAR(ngay_sinh) BETWEEN 10 AND 13 THEN 1 ELSE 0 END) AS Tu10Den14Tuoi,\n" +
                "    SUM(CASE WHEN YEAR(CURDATE()) - YEAR(ngay_sinh) BETWEEN 14 AND 17 THEN 1 ELSE 0 END) AS Tu14Den17Tuoi,\n" +
                "    SUM(CASE WHEN YEAR(CURDATE()) - YEAR(ngay_sinh) >= 18 THEN 1 ELSE 0 END) AS Tu18TroiLen\n" +
                "FROM nhan_khau WHERE deleted = 0;";
            rs = st.executeQuery(sql);
            
            int Duoi5Tuoi = -1;
            int Tu5Den10Tuoi = -1;
            int Tu10Den14Tuoi = -1;
            int Tu14Den17Tuoi = -1;
            int Tu18TroiLen = -1;
             
            if(rs.next()) {
                Duoi5Tuoi = rs.getInt("Duoi5Tuoi");
                Tu5Den10Tuoi = rs.getInt("Tu5Den10Tuoi");
                Tu10Den14Tuoi = rs.getInt("Tu10Den14Tuoi");
                Tu14Den17Tuoi = rs.getInt("Duoi5Tuoi");
                Tu18TroiLen = rs.getInt("Tu18TroiLen");
            }
            float tyLeDuoi5Tuoi = 100 * Duoi5Tuoi / soLuongNhanKhau;
            float tyLeTu5Den10Tuoi = 100 * Tu5Den10Tuoi / soLuongNhanKhau;
            float tyLeTu10Den14Tuoi = 100 * Tu10Den14Tuoi / soLuongNhanKhau;
            float tyLeTu14Den17Tuoi = 100 * Tu14Den17Tuoi / soLuongNhanKhau;
            float tyLeTu18TroiLen = 100 * Tu18TroiLen / soLuongNhanKhau;

            sql = "SELECT COUNT(*) AS soTamTru\n" +
                    "FROM tam_tru WHERE deleted = 0;";
            rs = st.executeQuery(sql);
            int soTamTru = -1;
            if(rs.next()){
                soTamTru = rs.getInt("soTamTru");
            }
                        
            sql = "SELECT COUNT(*) AS so_giay_tam_tru\n" +
                "FROM tam_tru\n" +
                "WHERE ngay_tam_tru IS NOT NULL\n" +
                "  AND DATEDIFF(CURDATE(), ngay_tam_tru) <= 2 * 365 AND deleted = 0;";
            rs = st.executeQuery(sql);
            int soTamTruHieuLuc = -1;
            if(rs.next()){
                soTamTruHieuLuc = rs.getInt("so_giay_tam_tru");
            }
            
            sql = "SELECT COUNT(*) AS tong_so_giay_tam_vang\n" +
                "FROM tam_vang WHERE deleted = 0;";
            rs = st.executeQuery(sql);
            int soTamVang = -1;
            if (rs.next()) {
                soTamVang = rs.getInt("tong_so_giay_tam_vang");
            }
                        
            sql = "SELECT COUNT(*) AS tong_so_nguoi_tam_vang\n" +
                "FROM tam_vang\n" +
                "WHERE ngay_bat_dau <= CURDATE() AND ngay_ket_thuc >= CURDATE() AND deleted = 0;";
            rs = st.executeQuery(sql);
            int soTamVangHienTai = -1;
            if(rs.next()){
                soTamVangHienTai = rs.getInt("tong_so_nguoi_tam_vang");
            }
            
            DefaultTableModel defaultTableModel = (DefaultTableModel) tThongKe.getModel();
            defaultTableModel.getDataVector().removeAllElements();
            defaultTableModel.fireTableDataChanged();

            String data[][] = {
                {"Số nhân khẩu", String.valueOf(soLuongNhanKhau), "người"},
                {"Số nhân khẩu nam", String.valueOf(soLuongNam), "người"},
                {"Tỷ lệ nhân khẩu nam", Float.toString(tyLeNam), "%"},
                {"Số nhân khẩu nữ", String.valueOf(soLuongNu), "người"},
                {"Tỷ lệ nhân khẩu nữ", Float.toString(tyLeNu), "%"},
                {"Số nhân khẩu dưới 5 tuổi", String.valueOf(Duoi5Tuoi), "người"},
                {"Tỷ lệ nhân khẩu dưới 5 tuổi", Float.toString(tyLeDuoi5Tuoi), "%"},
                {"Số nhân khẩu từ 5 đến 10 tuổi", String.valueOf(Tu5Den10Tuoi), "người"},
                {"Tỷ lệ nhân khẩu từ 5 đến 10 tuổi", Float.toString(tyLeTu5Den10Tuoi), "%"},
                {"Số nhân khẩu từ 10 đến 14 ", String.valueOf(Tu10Den14Tuoi), "người"},
                {"Tỷ lệ nhân khẩu từ 10 đến 14 tuổi", Float.toString(tyLeTu10Den14Tuoi), "%"},
                {"Số nhân khẩu từ 14 đến 17 tuổi", String.valueOf(Tu14Den17Tuoi), "người"},
                {"Tỷ lệ nhân khẩu từ 14 đến 17 tuổi", Float.toString(tyLeTu14Den17Tuoi), "%"},
                {"Số nhân khẩu từ 18 tuổi trở lên", String.valueOf(Tu18TroiLen), "người"},
                {"Tỷ lệ nhân khẩu từ 18 tuổi trở lên", Float.toString(tyLeTu18TroiLen), "%"},
                {"Số giấy khai báo tạm trú", String.valueOf(soTamTru), "tờ"},
                {"Số giấy khai báo tạm trú còn hiệu lực", String.valueOf(soTamTruHieuLuc), "tờ"},
                {"Số giấy khai báo tạm vắng", String.valueOf(soTamVang), "tờ"},
                {"Số người hiện tạm vắng", String.valueOf(soTamVangHienTai), "người"}
            };
            
            for (int i = 0; i < data.length; i++) {
                defaultTableModel.addRow(data[i]);
            }
            
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi kết nối cơ sở dữ liệu");
        }
    }    
    
    // ----------------- EXTRACT DATA FROM CLICK ON TABLE -----------------
    String key = "";
    
    public void openFile(String file){
        try{
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (Exception e) {            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKeMainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbHoKhau;
    private javax.swing.JLabel lbKhaiTu;
    private javax.swing.JLabel lbNhanKhau;
    private javax.swing.JLabel lbTamTru;
    private javax.swing.JLabel lbTamVang;
    private javax.swing.JLabel lbThoat;
    private javax.swing.JLabel lbThongKe;
    private javax.swing.JPanel nhanKhauPanel;
    private javax.swing.JTable tThongKe;
    // End of variables declaration//GEN-END:variables
}
